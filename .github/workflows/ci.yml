name: CI

on:
  push:
    branches: ['**']           # équiv. GitLab: pipeline sur chaque push
  pull_request:
    branches: ['**']           # exécute aussi sur PR

jobs:
  lint:
    name: Lint (ruff/isort/black)
    runs-on: ubuntu-latest
    container: python:3.11      # image: python:3.11
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py311-${{ hashFiles('**/requirements*.txt','**/pyproject.toml','**/setup.cfg') }}
          restore-keys: |
            pip-${{ runner.os }}-py311-

      - name: Install deps (before_script)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: ruff check
        run: ruff check .        # ruff check .
      - name: isort check
        run: isort --check-only .  # isort --check-only .
      - name: black check
        run: black --check .     # black --check .

  test:
    name: Tests (pytest)
    runs-on: ubuntu-latest
    needs: lint
    container: python:3.11
    env:
      PYTHONPATH: .              # export PYTHONPATH=.
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py311-${{ hashFiles('**/requirements*.txt','**/pyproject.toml','**/setup.cfg') }}
          restore-keys: |
            pip-${{ runner.os }}-py311-

      - name: Install deps (before_script)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run pytest
        run: pytest -q            # pytest -q
